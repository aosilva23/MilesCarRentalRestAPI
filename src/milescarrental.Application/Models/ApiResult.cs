/*
 * API D1 aplicaci√≥n de clientes
 *
 * Api Rest servicios de clientes
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ingenieria@groupware.com.co
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace milescarrental.Application.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class ApiResult : IEquatable<ApiResult>
    { 
        /// <summary>
        /// Gets or Sets ApiResponse
        /// </summary>
        [DataMember(Name="apiResponse")]
        public ApiRequestResponse ApiResponse { get; set; }

        /// <summary>
        /// Gets or Sets ApiPagination
        /// </summary>
        [DataMember(Name="apiPagination")]
        public ApiPagination ApiPagination { get; set; }

        /// <summary>
        /// Gets or Sets Content
        /// </summary>
        [DataMember(Name="content")]
        public Object Content { get; set; }

        /// <summary>
        /// Gets or Sets List
        /// </summary>
        [DataMember(Name="list")]
        public List<Object> List { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApiResult {\n");
            sb.Append("  ApiResponse: ").Append(ApiResponse).Append("\n");
            sb.Append("  ApiPagination: ").Append(ApiPagination).Append("\n");
            sb.Append("  Content: ").Append(Content).Append("\n");
            sb.Append("  List: ").Append(List).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ApiResult)obj);
        }

        /// <summary>
        /// Returns true if ApiResult instances are equal
        /// </summary>
        /// <param name="other">Instance of ApiResult to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApiResult other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    ApiResponse == other.ApiResponse ||
                    ApiResponse != null &&
                    ApiResponse.Equals(other.ApiResponse)
                ) && 
                (
                    ApiPagination == other.ApiPagination ||
                    ApiPagination != null &&
                    ApiPagination.Equals(other.ApiPagination)
                ) && 
                (
                    Content == other.Content ||
                    Content != null &&
                    Content.Equals(other.Content)
                ) && 
                (
                    List == other.List ||
                    List != null &&
                    List.SequenceEqual(other.List)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (ApiResponse != null)
                    hashCode = hashCode * 59 + ApiResponse.GetHashCode();
                    if (ApiPagination != null)
                    hashCode = hashCode * 59 + ApiPagination.GetHashCode();
                    if (Content != null)
                    hashCode = hashCode * 59 + Content.GetHashCode();
                    if (List != null)
                    hashCode = hashCode * 59 + List.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(ApiResult left, ApiResult right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ApiResult left, ApiResult right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
